name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.github/workflows/build-pr.yml'
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: unittest
          POSTGRES_PASSWORD: unittest
          POSTGRES_DB: unittest
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          cache: 'maven'
      - name: Build artifacts
        run: |
          echo "Building $(echo $GITHUB_SHA | cut -c1-7)"
          mvn jacoco:prepare-agent install jacoco:report sonar:sonar --quiet --batch-mode --settings .github/.m2/settings.xml -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions="pom.xml,**/src/test/**/*"
          echo "Deployed artifacts"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published

      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

