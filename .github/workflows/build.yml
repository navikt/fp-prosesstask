name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: unittest
          POSTGRES_PASSWORD: unittest 
          POSTGRES_DB: unittest 
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          cache: 'maven'
      - name: Build artifacts 
        shell: bash
        run: |
          set -x
          echo "Building $(echo $GITHUB_SHA | cut -c1-7)"
          mvn jacoco:prepare-agent install -e --batch-mode --settings ./.github/.m2/settings.xml --file pom.xml  -DtrimStackTrace=false -Djacoco.destFile=$(pwd)/target/jacoco.exec 
          mvn jacoco:report sonar:sonar -e --batch-mode --settings ./.github/.m2/settings.xml --file pom.xml -Djacoco.dataFile=$(pwd)/target/jacoco.exec -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=navikt_fp-prosesstask -Dsonar.exclusions="pom.xml,**/src/test/**/*"
          echo "Deployed artifacts"
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published 

  release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
