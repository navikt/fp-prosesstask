name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: unittest
          POSTGRES_PASSWORD: unittest 
          POSTGRES_DB: unittest 
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set cache key 
        run: |
          echo "::set-env name=CACHE_KEY::$(date +%U)"
      - uses: actions/cache@v1.1.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ env.CACHE_KEY }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build artifacts & deploy
        shell: bash
        run: |
          echo "Building artifacts $(echo $GITHUB_SHA | cut -c1-7)"
          mvn jacoco:prepare-agent deploy -e --batch-mode --settings .github/.m2/settings.xml  -Dmaven.wagon.http.pool=false --file pom.xml -Dchangelist= -Dsha1=-$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7) -Dfile.encoding=UTF-8 -DinstallAtEnd=true -DdeployAtEnd=true  -Djacoco.destFile=$(pwd)/target/jacoco.exec
          mvn jacoco:report sonar:sonar -e --batch-mode --settings .github/.m2/settings.xml  --file pom.xml -Djacoco.dataFile=$(pwd)/target/jacoco.exec -Dsonar.projectKey="navikt_fp-prosesstask" -Dsonar.host.url='https://sonarcloud.io' -Dsonar.organization=navit -Dsonar.login=${SONAR_TOKEN}
          echo "::set-env name=MVN_VERSION::$(mvn help:evaluate --batch-mode --settings .github/.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)"
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.MVN_VERSION }}
          release_name: Release ${{ env.MVN_VERSION }}
          draft: false
          prerelease: false

