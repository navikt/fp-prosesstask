name: Bygg pull request

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.github/workflows/build.yml'
      - '.github/workflows/release.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: unittest
          POSTGRES_PASSWORD: unittest
          POSTGRES_DB: unittest
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          cache: 'maven'
      - name: Build med sonar analyse
        if: github.actor != 'dependabot[bot]'
        run: |
          mvn jacoco:prepare-agent verify jacoco:report sonar:sonar -e --batch-mode --settings .github/.m2/settings.xml -DtrimStackTrace=false -Dsonar.login=${SONAR_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN  }}
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      - name: Build uten sonar analyse
        if: github.actor == 'dependabot[bot]'
        run: |
          mvn verify -e --batch-mode --settings .github/.m2/settings.xml -DtrimStackTrace=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATASOURCE_HOST: localhost
          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
